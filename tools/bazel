#! /bin/bash

# A wrapper script for bazel or bazelisk, which sets up the build environment
# to work with a local hermetic installation of nix.
# Started by bazel/bazelisk instead of ${BAZEL_REAL}

# Script directory.
# https://stackoverflow.com/questions/59895
readonly _script_dir=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

readonly _output_user_root="${HOME}/.cache/bazel/_bazel_${USER}"

# TODO: filmil - This does not support multiple architectures.
readonly _install_nix="${_script_dir}/install_nix.sh"
readonly _chroot="${_script_dir}/nix-user-chroot"

readonly _nix_install="${_output_user_root}/nix_install"
readonly _nix_dir="${_nix_install}/nix"
readonly _nix_user="${_nix_install}/user"

if [[ ! -f "${_nix_install}/created" ]]; then
    # Not installed, go install it.
    mkdir -p "${_nix_install}"
    mkdir -p "${_nix_dir}"
    mkdir -p "${_nix_user}"
    "${_chroot}" "${_nix_dir}" \
        env \
        HOME="${_nix_user}" \
        XDG_STATE_HOME="${_nix_user}/.local/state" \
        "${_install_nix}"
    touch "${_nix_install}/created"
fi

# TODO: fmil - This displaces the bazel cache, which is not expected. I would
# prefer that it does not. XDG_CACHE_HOME is not honored by bazel until 7.2.0
# :(
readonly _cmdline="source ${_nix_user}/.nix-profile/etc/profile.d/nix.sh \
    && ${BAZEL_REAL} --output_user_root=${_output_user_root} ${@}"

"${_chroot}" "${_nix_dir}" \
    env \
    HOME="${_nix_user}" \
    "${_nix_user}/.nix-profile/bin/nix-shell" --run "${_cmdline}"

